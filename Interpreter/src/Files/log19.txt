Program: 1
Execution stack
(
ref(int) v1;
ref(int) v2;
ref(int) v3;
new(v1, 2);
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v1;
ref(int) v2;
ref(int) v3;
new(v1, 2);
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v1;
ref(int) v2;
ref(int) v3;
new(v1, 2);
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v1;
ref(int) v2;
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v1;
ref(int) v2;
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v1;
ref(int) v2;
)
(
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v1;
ref(int) v2;
)
(
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v1;
)
(
ref(int) v2;
)
(
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v1;
)
(
ref(int) v2;
)
(
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v2;
)
(
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (0, int)
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v2;
)
(
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (0, int)
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (0, int)
v2 -> (0, int)
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v3;
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (0, int)
v2 -> (0, int)
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v3;
)
(
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (0, int)
v2 -> (0, int)
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
ref(int) v3;
)
(
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (0, int)
v2 -> (0, int)
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
new(v1, 2);
)
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Out
File table
Heap
Barrier



Program: 1
Execution stack
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Out
File table
Heap
1 -> 2
Barrier



Program: 1
Execution stack
(
new(v2, 3);
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Out
File table
Heap
1 -> 2
Barrier



Program: 1
Execution stack
(
new(v2, 3);
)
(
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Out
File table
Heap
1 -> 2
Barrier



Program: 1
Execution stack
(
new(v2, 3);
)
(
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Out
File table
Heap
1 -> 2
Barrier



Program: 1
Execution stack
(
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Out
File table
Heap
1 -> 2
2 -> 3
Barrier



Program: 1
Execution stack
(
new(v3, 4);
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Out
File table
Heap
1 -> 2
2 -> 3
Barrier



Program: 1
Execution stack
(
new(v3, 4);
)
(
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Out
File table
Heap
1 -> 2
2 -> 3
Barrier



Program: 1
Execution stack
(
new(v3, 4);
)
(
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Out
File table
Heap
1 -> 2
2 -> 3
Barrier



Program: 1
Execution stack
(
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier



Program: 1
Execution stack
(
newBarrier(cnt, readHeap(v2));
)
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier



Program: 1
Execution stack
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 1
Execution stack
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 1
Execution stack
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
)
(
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 1
Execution stack
(
fork(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
)
(
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 1
Execution stack
(
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 2
Execution stack
(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 1
Execution stack
(
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 2
Execution stack
(
await(cnt);
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 1
Execution stack
(
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
)
(
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 2
Execution stack
(
await(cnt);
)
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 1
Execution stack
(
fork(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
)
(
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 2
Execution stack
(
await(cnt);
)
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[]



Program: 1
Execution stack
(
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 2
Execution stack
(
await(cnt);
)
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 3
Execution stack
(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 1
Execution stack
(
await(cnt);
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 2
Execution stack
(
await(cnt);
)
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 3
Execution stack
(
await(cnt);
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 1
Execution stack
(
await(cnt);
)
(
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 2
Execution stack
(
await(cnt);
)
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 3
Execution stack
(
await(cnt);
)
(
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 1
Execution stack
(
await(cnt);
)
(
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 2
Execution stack
(
await(cnt);
)
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 3
Execution stack
(
await(cnt);
)
(
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2]



Program: 1
Execution stack
(
await(cnt);
)
(
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
(
await(cnt);
)
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
await(cnt);
)
(
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 1
Execution stack
(
await(cnt);
)
(
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
(
await(cnt);
)
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
await(cnt);
)
(
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 1
Execution stack
(
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 1
Execution stack
(
print(readHeap(v3));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
(
writeHeap(v1, (readHeap(v1) * 10));
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
writeHeap(v2, (readHeap(v2) * 10));
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 1
Execution stack
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
(
writeHeap(v1, (readHeap(v1) * 10));
)
(
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
writeHeap(v2, (readHeap(v2) * 10));
)
(
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
(
writeHeap(v1, (readHeap(v1) * 10));
)
(
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
writeHeap(v2, (readHeap(v2) * 10));
)
(
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 2
2 -> 3
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
(
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 20
2 -> 30
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 20
2 -> 30
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
(
print(readHeap(v1));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 20
2 -> 30
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
writeHeap(v2, (readHeap(v2) * 10));
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
File table
Heap
1 -> 20
2 -> 30
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 2
Execution stack
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
20
File table
Heap
1 -> 20
2 -> 30
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
writeHeap(v2, (readHeap(v2) * 10));
)
(
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
20
File table
Heap
1 -> 20
2 -> 30
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
writeHeap(v2, (readHeap(v2) * 10));
)
(
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
20
File table
Heap
1 -> 20
2 -> 30
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
20
File table
Heap
1 -> 20
2 -> 300
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
(
print(readHeap(v2));
)
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
20
File table
Heap
1 -> 20
2 -> 300
3 -> 4
Barrier
1 -> 3=[2, 1, 3]



Program: 3
Execution stack
Symbols table
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Out
4
20
300
File table
Heap
1 -> 20
2 -> 300
3 -> 4
Barrier
1 -> 3=[2, 1, 3]




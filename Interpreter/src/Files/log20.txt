Program: 3
Execution stack
(
createLock(myLock);
)
(
fork(
v = (v + 1);
v = (v + 1);
acquireLock(myLock);
writeHeap(a, 30);
releaseLock(myLock);
);
)
(
acquireLock(myLock);
writeHeap(a, 30);
print(readHeap(a));
releaseLock(myLock);
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table



Program: 3
Execution stack
(
fork(
v = (v + 1);
v = (v + 1);
acquireLock(myLock);
writeHeap(a, 30);
releaseLock(myLock);
);
)
(
acquireLock(myLock);
writeHeap(a, 30);
print(readHeap(a));
releaseLock(myLock);
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
fork(
v = (v + 1);
v = (v + 1);
acquireLock(myLock);
writeHeap(a, 30);
releaseLock(myLock);
);
)
(
acquireLock(myLock);
writeHeap(a, 30);
print(readHeap(a));
releaseLock(myLock);
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
writeHeap(a, 30);
print(readHeap(a));
releaseLock(myLock);
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 4
Execution stack
(
v = (v + 1);
v = (v + 1);
acquireLock(myLock);
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
writeHeap(a, 30);
print(readHeap(a));
releaseLock(myLock);
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 4
Execution stack
(
v = (v + 1);
v = (v + 1);
acquireLock(myLock);
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
writeHeap(a, 30);
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 4
Execution stack
(
v = (v + 1);
v = (v + 1);
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
writeHeap(a, 30);
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 4
Execution stack
(
v = (v + 1);
v = (v + 1);
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
writeHeap(a, 30);
)
(
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 4
Execution stack
(
v = (v + 1);
v = (v + 1);
)
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
writeHeap(a, 30);
)
(
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 4
Execution stack
(
v = (v + 1);
v = (v + 1);
)
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
)
(
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 4
Execution stack
(
v = (v + 1);
)
(
v = (v + 1);
)
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
)
(
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 4
Execution stack
(
v = (v + 1);
)
(
v = (v + 1);
)
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> false



Program: 3
Execution stack
(
writeHeap(a, 30);
)
(
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> true



Program: 4
Execution stack
(
v = (v + 1);
)
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 11
Out
File table
Heap
1 -> 22
Lock table
myLock -> true



Program: 3
Execution stack
(
writeHeap(a, 30);
)
(
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22
Lock table
myLock -> true



Program: 4
Execution stack
(
v = (v + 1);
)
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 11
Out
File table
Heap
1 -> 22
Lock table
myLock -> true



Program: 3
Execution stack
(
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(readHeap(a));
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(readHeap(a));
)
(
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(readHeap(a));
)
(
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
releaseLock(myLock);
)
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
acquireLock(myLock);
)
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(v);
acquireLock(myLock);
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
writeHeap(a, 30);
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(v);
acquireLock(myLock);
)
(
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
writeHeap(a, 30);
)
(
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(v);
acquireLock(myLock);
)
(
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
writeHeap(a, 30);
)
(
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(v);
)
(
acquireLock(myLock);
)
(
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(v);
)
(
acquireLock(myLock);
)
(
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 4
Execution stack
(
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 12
Out
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
acquireLock(myLock);
)
(
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
10
File table
Heap
1 -> 30
Lock table
myLock -> false



Program: 4
Execution stack
Symbols table
a -> (1, int)
v -> 12
Out
30
10
File table
Heap
1 -> 30
Lock table
myLock -> false



Program: 3
Execution stack
(
acquireLock(myLock);
)
(
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
10
File table
Heap
1 -> 30
Lock table
myLock -> false



Program: 3
Execution stack
(
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
10
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(readHeap(a));
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
10
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(readHeap(a));
)
(
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
10
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
print(readHeap(a));
)
(
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
10
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
10
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
(
releaseLock(myLock);
)
Symbols table
a -> (1, int)
v -> 10
Out
30
10
30
File table
Heap
1 -> 30
Lock table
myLock -> true



Program: 3
Execution stack
Symbols table
a -> (1, int)
v -> 10
Out
30
10
30
File table
Heap
1 -> 30
Lock table
myLock -> false




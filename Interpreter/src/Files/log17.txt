Program: 4
Execution stack
(
int v;
ref(int) a;
v = 1;
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
Out
File table
Heap



Program: 4
Execution stack
(
int v;
ref(int) a;
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
Out
File table
Heap



Program: 4
Execution stack
(
int v;
ref(int) a;
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
Out
File table
Heap



Program: 4
Execution stack
(
int v;
ref(int) a;
)
(
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
Out
File table
Heap



Program: 4
Execution stack
(
int v;
ref(int) a;
)
(
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
Out
File table
Heap



Program: 4
Execution stack
(
int v;
)
(
ref(int) a;
)
(
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
Out
File table
Heap



Program: 4
Execution stack
(
int v;
)
(
ref(int) a;
)
(
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
Out
File table
Heap



Program: 4
Execution stack
(
ref(int) a;
)
(
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
v -> 0
Out
File table
Heap



Program: 4
Execution stack
(
ref(int) a;
)
(
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
v -> 0
Out
File table
Heap



Program: 4
Execution stack
(
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 0
Out
File table
Heap



Program: 4
Execution stack
(
v = 1;
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 0
Out
File table
Heap



Program: 4
Execution stack
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
)
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
)
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 5
Execution stack
(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 5
Execution stack
(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 2
Out
File table
Heap



Program: 5
Execution stack
(
print(v);
)
(
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 2
Out
File table
Heap



Program: 5
Execution stack
(
print(v);
)
(
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 1
Out
File table
Heap



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap



Program: 5
Execution stack
(
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 1
Out
1
File table
Heap



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap



Program: 5
Execution stack
(
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 1
Out
1
File table
Heap



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
)
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap



Program: 5
Execution stack
(
new(a, v);
)
(
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 1
Out
1
File table
Heap



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
)
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap



Program: 5
Execution stack
(
new(a, v);
)
(
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 1
Out
1
File table
Heap



Program: 4
Execution stack
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap
1 -> 1



Program: 5
Execution stack
(
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 1
Out
1
File table
Heap
1 -> 1



Program: 6
Execution stack
(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap
1 -> 1



Program: 4
Execution stack
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap
1 -> 1



Program: 5
Execution stack
(
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 1
Out
1
File table
Heap
1 -> 1



Program: 6
Execution stack
(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap
1 -> 1



Program: 4
Execution stack
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 3
Out
1
File table
Heap
1 -> 1



Program: 5
Execution stack
(
v = (v + 1);
v = (v + 1);
)
(
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 1
Out
1
File table
Heap
1 -> 1



Program: 6
Execution stack
(
print(v);
)
(
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap
1 -> 1



Program: 4
Execution stack
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 3
Out
1
File table
Heap
1 -> 1



Program: 5
Execution stack
(
v = (v + 1);
v = (v + 1);
)
(
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 1
Out
1
File table
Heap
1 -> 1



Program: 6
Execution stack
(
print(v);
)
(
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 2
Out
1
File table
Heap
1 -> 1



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 3
Out
1
2
File table
Heap
1 -> 1



Program: 5
Execution stack
(
v = (v + 1);
)
(
v = (v + 1);
)
(
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 1
Out
1
2
File table
Heap
1 -> 1



Program: 6
Execution stack
(
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 2
Out
1
2
File table
Heap
1 -> 1



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 3
Out
1
2
File table
Heap
1 -> 1



Program: 5
Execution stack
(
v = (v + 1);
)
(
v = (v + 1);
)
(
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 1
Out
1
2
File table
Heap
1 -> 1



Program: 6
Execution stack
(
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 2
Out
1
2
File table
Heap
1 -> 1



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
)
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 3
Out
1
2
File table
Heap
1 -> 1



Program: 5
Execution stack
(
v = (v + 1);
)
(
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 2
Out
1
2
File table
Heap
1 -> 1



Program: 6
Execution stack
(
new(a, v);
)
(
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 2
Out
1
2
File table
Heap
1 -> 1



Program: 4
Execution stack
(
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
)
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 3
Out
1
2
File table
Heap
1 -> 1



Program: 5
Execution stack
(
v = (v + 1);
)
(
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 2
Out
1
2
File table
Heap
1 -> 1



Program: 6
Execution stack
(
new(a, v);
)
(
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 2
Out
1
2
File table
Heap
1 -> 1



Program: 4
Execution stack
(
v = (v + 1);
)
(
while(v != 10){
fork(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
v = (v + 1);
}
)
Symbols table
a -> (0, int)
v -> 3
Out
1
2
File table
Heap
1 -> 1
2 -> 2



Program: 5
Execution stack
(
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (1, int)
v -> 3
Out
1
2
File table
Heap
1 -> 1
2 -> 2



Program: 6
Execution stack
(
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (2, int)
v -> 2
Out
1
2
File table
Heap
1 -> 1
2 -> 2



Program: 7
Execution stack
(
print(v);
new(a, v);
v = (v + 1);
v = (v + 1);
v = (v + 1);
v = (v + 1);
)
Symbols table
a -> (0, int)
v -> 3
Out
1
2
File table
Heap
1 -> 1
2 -> 2



